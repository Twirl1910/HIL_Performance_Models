[General]
network = Full_Stream_With_delay_distribution_ROS_Application
cmdenv-interactive = true
sim-time-limit = 10s

# TODO ALLE activePacketSource auf einen Prozess binden
# TODO dT1 vergleichen (mit eigenem Trace)
**.numRadar = 6
**.numIMU = 1
**.numCamera = 10

# general
**.priority = 5
**.crcMode = "computed"
**.fcsMode = "computed"
**.pcapRecorder[*].alwaysFlush = true
**.probeInterval = 100ms

# result files
output-vector-file = ${resultdir}/Full_Stream_PC.vec
output-scalar-file = ${resultdir}/Full_Stream_PC.sca


###############
##### pc1 #####
###############
*.pc1.client.numPcapRecorders = 1
*.pc1.client.pcapRecorder[*].pcapLinkType = 1 # ethernet
*.pc1.client.pcapRecorder[*].pcapFile = "results/ethclient.pcap"
*.pc1.client.app[*].io.connectAddress = "pc2.server"
*.pc1.client.packDelayer.delay = 2us
*.pc1.client.addInterPackDelay = false
*.pc1.strategy = "Fifo"
*.pc1.cores = 1
*.pc1.rosData*.activePacketSource[*].productionInterval = 1ms
*.pc1.rosData*.activePacketSource[*].packetLength = 17B
*.pc1.rosData*.activePacketSource[*].processingTime = 0.5ms
*.pc1.rosData*.packetServer*[*].processingTime = 3ms
*.pc1.rosData*.packetDelayer2[*].delay = 2ms


###############
##### pc2 #####
###############
*.pc2.strategy = "Fifo"
*.pc2.cores = 1
*.pc2.sinkCam.packetProcessor[*].packetLength = 5MB#4883B#
*.pc2.sinkRad.packetProcessor[*].packetLength = 65050B
*.pc2.sinkIMU.packetProcessor[*].packetLength = 17B
*.pc2.sink*.PacketServer[*].processingTime = 0s
*.pc2.sink*.PacketDelayer[*].delay = 0s
*.pc2.sink*.dropTailQueue_LV1[*].packetCapacity=1000
*.pc2.sink*.dropTailQueue_LV2[*].packetCapacity=1000
*.pc2.sink*.custPacketServerWithBufferTimeAndTimeStamp[*].bufferInterval = 120ms
*.pc2.sink*.custPacketServerWithBufferTimeAndTimeStamp[*].processingTime = 1ms

